% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_values.R
\name{aggregate_values}
\alias{aggregate_values}
\title{Aggregate different values from duplicate rows in a dataframe}
\usage{
aggregate_values(df, var, dupe_id, sep = " | ")
}
\arguments{
\item{df}{A dataframe.}

\item{var}{A character vector of variable names in \code{df}.}

\item{dupe_id}{The duplicate ID variable name, which groups all members of a duplicate set.}

\item{sep}{A string to use as a separator between the aggregated values from a duplicate set.}
}
\value{
A dataframe of aggregated values from each dupeset (row) and variable (column).
}
\description{
When a dataframe is deduplicated, values may differ among duplicates in the variables that were not used as the basis for deduplication, and some of these different values will be lost. \code{aggregate_values()} combines the different values in selected variables (named in \code{var}) so that no data is lost as a result of deduplication.
}
\details{
\code{aggregate_values()} should be run on either \code{df_full} or \code{df_dupesets}, both produced by \code{\link[=undupe]{undupe()}}, because these contain duplicate rows and a duplicate ID variable to identify them.

Values within each variable named in \code{var} from a duplicate set are pasted together as strings separated by \code{sep}. \code{NA}s and blank/empty strings are omitted.
}
\examples{
n_rows <- 20
df <- data.frame(
  x = sample(c("cat", "horse", "howler monkey"), size = n_rows, replace = TRUE),
  y = sample(c(1, 10, 100, NA), size = n_rows, replace = TRUE),
  z = sample(c("banana", "carrot", "pickle"), size = n_rows, replace = TRUE)
)
undupe <- undupe(df, undupe_vars = c("x", "y"))
df_aggregated <- aggregate_values(undupe[["df_dupesets"]], var = "z", dupe_id = "dupe_id")
}
\seealso{
Other undupe functions: 
\code{\link{distill_dupeset_diffs}()},
\code{\link{dupes2xl}()},
\code{\link{dupeset_conflict_count}()},
\code{\link{undupe}()}
}
\concept{undupe functions}
