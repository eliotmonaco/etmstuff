% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pick_max_cfm_test.R
\name{pick_max_cfm_test}
\alias{pick_max_cfm_test}
\title{Pick the test (confirmatory preferred) with the highest result for a person}
\usage{
pick_max_cfm_test(df, cfm_only = FALSE, silent = FALSE)
}
\arguments{
\item{df}{A dataframe.}

\item{cfm_only}{Logical: consider confirmatory tests only if \code{TRUE}; consider all tests (confirmatory, screening, and unknown/other) if \code{FALSE} (the default).}

\item{silent}{Logical: silence progress indicator if \code{TRUE}.}
}
\value{
A dataframe.
}
\description{
This function returns a maximum of one test per person from \code{df}. Test are filtered by \code{patient_id} and evaluated based on the values in \code{test_reason} (confirmatory tests are either preferred or considered exclusively) and \code{lab_result_number}.

The function has two modes:
\enumerate{
\item Consider all tests (\code{cfm_only = FALSE}): After filtering tests by \code{patient_id}, the confirmatory test with the highest result is kept. If there are no confirmatory tests for an individual, the non-confirmatory test with the highest result is kept.
\item Consider confirmatory tests only (\code{cfm_only = TRUE}): After filtering tests by \code{patient_id}, the confirmatory test with the highest result is kept. Non-confirmatory tests are not considered. Therefore, if there is no confirmatory test associated with a \code{patient_id} value, that individual is not represented by a test in the output.
}
}
\details{
The \code{test_reason} variable is created by the function \code{\link[=classify_test_reason]{classify_test_reason()}}. See this function's documentation for definitions of \code{test_reason} values.

Confirmatory \code{test_reason} values are
\itemize{
\item \code{ven_cfm_init}
\item \code{cap_cfm_elev}
\item \code{cap_cfm_nonelev}
\item \code{ven_cfm_elev}
\item \code{ven_cfm_nonelev}
\item \code{ven_flw}
}

Non-confirmatory \code{test_reason} values are
\itemize{
\item \code{cap_scrn}
\item \code{unknown}
}
}
