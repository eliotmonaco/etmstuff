% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_compare.R
\name{fuzzy_compare}
\alias{fuzzy_compare}
\title{Compare via both fuzzy and exact methods}
\usage{
fuzzy_compare(
  df1,
  df2,
  row_id,
  fuzzy_var,
  exact_var = NULL,
  ignore_case = TRUE
)
}
\arguments{
\item{df1, df2}{Dataframes to be compared.}

\item{row_id}{A unique row identifier variable in \code{df1} and \code{df2}.}

\item{fuzzy_var}{Variables in \code{df1} and \code{df2} selected for fuzzy comparison.}

\item{exact_var}{Variables in \code{df1} and \code{df2} selected for exact matching (optional).}

\item{ignore_case}{Logical: ignore case when comparing fuzzy and exact variables if \code{TRUE}.}
}
\value{
A dataframe of potential matches joined by the variables in \code{exact_var}. It contains:
\itemize{
\item \code{row_id}s from \code{df1} and \code{df2}
\item \code{sim_score}: the string similarity score from comparing the values in \code{fuzzy_var} (see \code{\link[stringdist:stringsim]{stringdist::stringsim()}})
\item \code{string_1} & \code{string_2}: the merged values from \code{fuzzy_var}
\item all \code{exact_var} variables
}
}
\description{
This function compares variables in two dataframes, allowing some variables to be matched exactly and other variables to be compared using string similarity scoring. This was designed for comparing addresses since certain values, e.g., city, state, and zip code, are more amenable to exact matching, whereas other values, e.g., street and unit, are subject to variation and may require a flexible/inexact method of comparison.

The variables undergoing comparison must have the same names in both dataframes (see example). Variables in \code{exact_var} are matched first if provided. Only rows whose values in \code{exact_var} match exactly will be returned.
}
\examples{
df1 <- sim_address(nrow = 10)
df1$id <- 1:nrow(df1)

df2 <- sim_address(nrow = 5000)
df2$id <- 1:nrow(df2)

df_match <- fuzzy_compare(
  df1, df2, row_id = "id",
  fuzzy_var = c("street", "unit"),
  exact_var = c("city", "state", "zip")
)

}
